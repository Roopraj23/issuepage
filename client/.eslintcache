[{"/Users/rooprajbs/Desktop/issuepage/client/src/reportWebVitals.js":"1","/Users/rooprajbs/Desktop/issuepage/client/src/App.js":"2","/Users/rooprajbs/Desktop/issuepage/client/src/components/Posts.js":"3","/Users/rooprajbs/Desktop/issuepage/client/src/components/Pagination.js":"4","/Users/rooprajbs/Desktop/issuepage/client/src/components/Search.js":"5","/Users/rooprajbs/Desktop/issuepage/client/src/index.js":"6","/Users/rooprajbs/Desktop/issuepage/client/src/components/Submit.js":"7"},{"size":362,"mtime":1607004833268,"results":"8","hashOfConfig":"9"},{"size":2879,"mtime":1607178258458,"results":"10","hashOfConfig":"9"},{"size":489,"mtime":1607178083426,"results":"11","hashOfConfig":"9"},{"size":613,"mtime":1607178093103,"results":"12","hashOfConfig":"9"},{"size":2447,"mtime":1607168289244,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":1607147473074,"results":"14","hashOfConfig":"9"},{"size":1628,"mtime":1607180767702,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dg4r2j",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/rooprajbs/Desktop/issuepage/client/src/reportWebVitals.js",[],"/Users/rooprajbs/Desktop/issuepage/client/src/App.js",["32","33"],"import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport Axios from \"axios\";\nimport Posts from \"./components/Posts\";\nimport Pagination from \"./components/Pagination\";\nimport Search from \"./components/Search\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Submit from \"./components/Submit\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentpage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  // useEffect(() => {\n  //   const fetchPosts = async () => {\n  //     setLoading(true);\n  //     const res = await Axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  //     setPosts(res.data);\n  //     setLoading(false);\n  //   }\n  //   fetchPosts();\n  // }, []);\n  useEffect(() => {\n    setLoading(true);\n    Axios.get(\"http://localhost:3001/api/get\").then((response) => {\n      setPosts(response.data);\n      setLoading(false);\n    });\n  }, []);\n  \n  //Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOffirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts  = posts.slice(indexOffirstPost, indexOfLastPost);\n\n  //Change the page\n  const paginate = pageNumber => setCurrentpage(pageNumber);\n   return (\n     <Router>\n         <div className=\"container\">\n         <h1>My app</h1>\n          <Link to=\"/Issue\"><button type=\"button\" className=\"btn btn-success\">Issue Page</button></Link>\n \n        <switch>\n          <Route path=\"/Issue\">\n           <Search />\n           <Posts posts={currentPosts} loading={loading} />\n           <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} />\n          </Route>\n\n          <Route path=\"/Submit\">\n            <Submit />\n          </Route>\n\n        </switch>\n        </div>\n     </Router>\n\n  );\n};\n\nexport default App;\n\n/*\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Submit from \"./components/Submit\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users</Link>\n            </li>\n          </ul>\n        </nav>\n\n      \n        <Switch>\n          <Route path=\"/about\">\n            <Submit />\n          </Route>\n          <Route path=\"/users\">\n            <Users />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n */","/Users/rooprajbs/Desktop/issuepage/client/src/components/Posts.js",["34"],"/Users/rooprajbs/Desktop/issuepage/client/src/components/Pagination.js",["35"],"/Users/rooprajbs/Desktop/issuepage/client/src/components/Search.js",["36","37","38","39"],"/Users/rooprajbs/Desktop/issuepage/client/src/index.js",[],"/Users/rooprajbs/Desktop/issuepage/client/src/components/Submit.js",["40"],"import React, {useState, useEffect} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nfunction Submit(){\n    const [userName, setUsername] = useState(\"\");\n    const [issues, setreviews] = useState(\"\");\n    const [reviewList, setReviewlist] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n      Axios.get(\"http://localhost:3001/api/get\").then((response) => {\n       setReviewlist(response.data);  \n       //console.log(response);\n      });\n    }, []);\n    const submitIssue = () => {\n      Axios.post(\"http://localhost:3001/api/insert\", {\n        userName: userName,\n        issue: issues\n      }).then(() => {\n        alert(\"Sucessfully inserted..!\");\n      });\n\n      const x = document.forms[\"myForm\"][\"userName\"].value;\n      const y = document.forms[\"myForm\"][\"issue\"].value;\n      if ((x === \"\" || x === null) || (y === \"\" || y === null)) \n      { \n        alert(\"No Issue found...!\");\n      }\n      else\n      { \n        alert(\"Succesfully added...!\")\n        history.push(\"/Issue\");\n      }\n    };\n    return (\n      <form name=\"myForm\">\n        <div className=\"form\"> \n        <label>Name</label>\n        <input\n         type=\"text\"\n         name=\"userName\"\n         onChange={(e) => {\n          setUsername(e.target.value);\n        }} required />\n        <label>Type Issues</label>\n        <input\n         type=\"text\"\n         name=\"issue\"\n         onChange={(e) => {\n          setreviews(e.target.value);\n        }} required/>\n        <button onClick={submitIssue} type=\"submit\">Submit</button>\n\n      </div>\n      </form>\n    )\n}\n\nexport default Submit;",{"ruleId":"41","severity":1,"message":"42","line":7,"column":35,"nodeType":"43","messageId":"44","endLine":7,"endColumn":41},{"ruleId":"41","severity":1,"message":"45","line":14,"column":24,"nodeType":"43","messageId":"44","endLine":14,"endColumn":39},{"ruleId":"41","severity":1,"message":"46","line":1,"column":16,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":14,"column":19,"nodeType":"49","endLine":14,"endColumn":85},{"ruleId":"41","severity":1,"message":"42","line":2,"column":35,"nodeType":"43","messageId":"44","endLine":2,"endColumn":41},{"ruleId":"41","severity":1,"message":"50","line":2,"column":43,"nodeType":"43","messageId":"44","endLine":2,"endColumn":48},{"ruleId":"41","severity":1,"message":"51","line":2,"column":50,"nodeType":"43","messageId":"44","endLine":2,"endColumn":54},{"ruleId":"41","severity":1,"message":"52","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":14},{"ruleId":"41","severity":1,"message":"53","line":8,"column":12,"nodeType":"43","messageId":"44","endLine":8,"endColumn":22},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'setPostsPerPage' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Route' is defined but never used.","'Link' is defined but never used.","'Submit' is defined but never used.","'reviewList' is assigned a value but never used."]